@model IEnumerable<HMSApp.Models.Appointment>

@{
    var doctorName = ViewData["DoctorName"] as string;
    if (!string.IsNullOrEmpty(doctorName))
    {
        doctorName = char.ToUpper(doctorName[0]) + (doctorName.Length > 1 ? doctorName.Substring(1) : string.Empty);
    }
    if (string.IsNullOrEmpty(doctorName))
    {
        Context.Response.Redirect("/Account/DoctorLogin");
    }
    ViewData["Title"] = "Doctor Dashboard";
    Layout = "_Layout";
    
    int total = (int)(ViewData["TotalAppointments"] ?? 0);
    int pending = (int)(ViewData["PendingAppointments"] ?? 0);
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/doctor-dashboard.css" asp-append-version="true" />

<style>
    .row-whoosh-out {
        transition: all .45s ease;
        opacity: 0 !important;
        transform: translateX(40px);
    }
    .row-collapsed {
        height: 0 !important;
        padding-top: 0 !important;
        padding-bottom: 0 !important;
        margin: 0 !important;
        border: 0 !important;
    }
    .active-stat {
        outline: 3px solid rgba(255,255,255,.5);
        box-shadow: 0 0 0 3px rgba(0,123,255,.25);
    }
    
    /* Dynamic visual enhancements */
    .stat-card {
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }
    
    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }
    
    .stat-card:hover::before {
        left: 100%;
    }
    
    .profile-block {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 15px;
        padding: 20px;
        color: white;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .profile-block:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.3);
    }
    
    .profile-avatar {
        width: 60px;
        height: 60px;
        background: rgba(255,255,255,0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        backdrop-filter: blur(10px);
    }
</style>

<div class="container-fluid py-4">
    <div class="dd-header-bar mb-4 gradient-border p-3 rounded-3">
        <div class="d-flex flex-column flex-md-row align-items-md-center justify-content-between gap-3">
            <div>
                <h2 class="fw-bold mb-1"><i class="bi bi-heart-pulse-fill me-2"></i>Doctor Dashboard</h2>
                <div class="small opacity-75">Welcome back, <span class="doctor-name-inline fw-semibold">Dr. @doctorName</span></div>
            </div>

            <div class="d-flex flex-wrap gap-2 align-items-center">
                <div class="nav-quick d-flex gap-2 flex-wrap me-2">
                    <a class="btn btn-sm btn-light px-3" href="#appointments"><i class="bi bi-calendar-event me-1"></i>Appointments</a>
                    <a class="btn btn-sm btn-light px-3" asp-controller="Doctor" asp-action="Profile"><i class="bi bi-person-badge me-1"></i>Profile</a>
                    <a class="btn btn-sm btn-light px-3" asp-controller="Doctor" asp-action="Payments"><i class="bi bi-cash-stack me-1"></i>View Payments</a>
                    
                    <!-- Availability Dropdown -->
                    @{
                        var isAvailable = ViewData["DoctorAvailability"] != null && (bool)ViewData["DoctorAvailability"];
                    }
                    <div class="dropdown">
                        <select class="form-select form-select-sm px-3" id="availabilityDropdown" style="min-width: 130px;">
                            @if (isAvailable)
                            {
                                <option value="true" selected>Available</option>
                                <option value="false">Unavailable</option>
                            }
                            else
                            {
                                <option value="true">Available</option>
                                <option value="false" selected>Unavailable</option>
                            }
                        </select>
                    </div>
                </div>

                <a href="/Account/Logout" class="btn btn-sm btn-outline-danger" id="logoutBtn"><i class="bi bi-box-arrow-right me-1"></i>Logout</a>
            </div>
        </div>
    </div>

    <div class="row g-3 mb-4">
        <div class="col-12 col-md-6">
            <button type="button" class="w-100 text-start p-0 border-0 bg-transparent stat-trigger" data-filter="all" style="cursor:pointer;">
                <div class="stat-card p-3 h-100" style="background:var(--dd-primary-grad)" id="totalCard">
                    <div class="mini-label mb-1 text-uppercase small">Total Appointments</div>
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="stat-value" id="totalAppointments">@total</div>
                        <div class="icon-bg"><i class="bi bi-journal-medical"></i></div>
                    </div>
                </div>
            </button>
        </div>

        <div class="col-12 col-md-6">
            <button type="button" class="w-100 text-start p-0 border-0 bg-transparent stat-trigger" data-filter="pending" style="cursor:pointer;">
                <div class="stat-card p-3 h-100" style="background:var(--dd-orange-grad)" id="pendingCard">
                    <div class="mini-label mb-1 text-uppercase small">Pending</div>
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="stat-value" id="pendingActions">@pending</div>
                        <div class="icon-bg"><i class="bi bi-hourglass-split"></i></div>
                    </div>
                </div>
            </button>
        </div>
    </div>

    <!-- Appointments & Profile -->
    <div class="row g-4 mb-4">
        <div class="col-lg-8">
            <div id="appointments" class="card dd-panel gradient-border h-100">
                <div class="card-header pb-0">
                    <div class="d-flex flex-wrap justify-content-between align-items-center gap-2">
                        <h5 class="card-title mb-0"><i class="bi bi-calendar2-range me-2 text-primary"></i>Appointments</h5>
                        <div class="btn-group btn-group-sm" role="group" id="apptFilters">
                            <button class="btn btn-outline-primary active filter-btn" data-filter="upcoming" type="button">Upcoming</button>
                            <button class="btn btn-outline-secondary filter-btn" data-filter="all" type="button">All</button>
                            <button class="btn btn-outline-success filter-btn" data-filter="completed" type="button">Completed</button>
                            <button class="btn btn-outline-danger filter-btn" data-filter="cancelled" type="button">Cancelled</button>
                        </div>
                    </div>
                </div>

                <div class="card-body pt-3">
                    <div class="table-responsive">
                        <table class="table table-hover table-custom align-middle mb-0" id="appointmentsTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Date</th>
                                    <th>Time</th>
                                    <th>Patient</th>
                                    <th>Status</th>
                                    <th>Symptoms</th>
                                    <th class="text-center" style="width:160px;">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model == null || !Model.Any())
                                {
                                    <tr class="text-muted">
                                        <td colspan="6" class="text-center py-4">
                                            <div class="placeholder-box">No appointments available.</div>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    foreach (var a in Model)
                                    {
                                        var statusClass = a.Status == "Completed" ? "success" : a.Status == "Cancelled" ? "danger" : "warning";
                                        <tr data-appointment-id="@a.AppointmentId" data-status="@a.Status" data-patient-name="@a.PatientName" data-patient-id="@a.PatientId">
                                            <td>@a.AppointmentDate.ToString("yyyy-MM-dd")</td>
                                            <td>@a.TimeSlot</td>
                                            <td>@a.PatientName</td>
                                            <td><span class="badge text-bg-@statusClass">@a.Status</span></td>
                                            <td class="small">@(string.IsNullOrWhiteSpace(a.Symptoms) ? "N/A" : a.Symptoms)</td>
                                            <td class="text-center">
                                                @if (a.Status == "Completed")
                                                {
                                                    <span class="text-success small fw-semibold"><i class="bi bi-check-circle-fill me-1"></i>Completed</span>
                                                }
                                                else if (a.Status != "Cancelled")
                                                {
                                                    <div class="btn-group btn-group-sm" role="group">
                                                        <button type="button" class="btn btn-outline-success btn-complete" title="Complete & Bill"><i class="bi bi-check2"></i></button>
                                                        <button type="button" class="btn btn-outline-danger btn-cancel" title="Cancel"><i class="bi bi-x"></i></button>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted small">Cancelled</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <a asp-controller="Doctor" asp-action="Profile" style="text-decoration: none; color: inherit; display: block;">
                <div id="profile" class="profile-block h-100 d-flex flex-column">
                    <div class="d-flex align-items-center gap-3 mb-3">
                        <div class="profile-avatar"><i class="bi bi-person"></i></div>
                        <div class="flex-fill">
                            <div class="fw-semibold fs-5 mb-0" id="doctorName">Dr. @doctorName</div>
                            <div class="opacity-75 small" id="doctorSpecialization">@ViewData["DoctorSpecialization"]</div>
                        </div>
                    </div>
                    <div class="mb-2">
                        <span class="badge availability-badge" id="availabilityBadge">
                            @if (ViewData["DoctorAvailability"] != null && (bool)ViewData["DoctorAvailability"])
                            {
                                <span class="bg-success"><i class="bi bi-check-circle me-1"></i>Available</span>
                            }
                            else
                            {
                                <span class="bg-danger"><i class="bi bi-x-circle me-1"></i>Unavailable</span>
                            }
                        </span>
                    </div>
                    <div class="small opacity-75">Contact: <span id="doctorContact">@ViewData["DoctorContact"]</span></div>

                </div>
            </a>
        </div>
    </div>
</div>

<!-- Bill Modal -->
<div class="modal fade" id="billModal" tabindex="-1" aria-labelledby="billModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="billModalLabel">Create Bill</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="billForm">
                    <input type="hidden" id="billAppointmentId" />
                    <div class="mb-3">
                        <label class="form-label">Patient Name</label>
                        <input type="text" class="form-control" id="billPatientName" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Bill Date</label>
                        <input type="text" class="form-control" id="billDate" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Prescription</label>
                        <textarea required class="form-control" id="billPrescription" rows="3" placeholder="Enter prescription"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Total Amount</label>
                        <input required type="number" step="0.01" min="0" class="form-control" id="billTotalAmount" placeholder="0.00" />
                    </div>
                </form>
                <div class="alert alert-danger d-none" id="billError"></div>
                <div class="alert alert-success d-none" id="billSuccess">Bill saved.</div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success" id="generateAndPayBtn"><i class="bi bi-lightning-charge me-1"></i>Generate & Pay</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    $(function(){
        var billModal = new bootstrap.Modal($('#billModal')[0]);

        function todayStr(){ return new Date().toISOString().split('T')[0]; }

        function openBillModal($row){
            $('#billAppointmentId').val($row.data('appointment-id'));
            $('#billPatientName').val($row.data('patient-name'));
            $('#billDate').val(todayStr());
            $('#billPrescription').val('');
            $('#billTotalAmount').val('');
            $('#billError, #billSuccess').addClass('d-none');
            billModal.show();
        }

        function renderAppointments(rows){
            var $tbody = $('#appointmentsTable tbody');
            if(!rows.length){
                $tbody.html('<tr class="text-muted"><td colspan="6" class="text-center py-4"><div class="placeholder-box">No appointments.</div></td></tr>');
                return;
            }

            var html = $.map(rows, function(a){
                var statusClass = a.status === 'Completed' ? 'success' : a.status === 'Cancelled' ? 'danger' : 'warning';
                var actionsHtml = '';
                
                // Show different content based on appointment status
                if (a.status === 'Completed') {
                    actionsHtml = '<span class="text-success small fw-semibold"><i class="bi bi-check-circle-fill me-1"></i>Completed</span>';
                } else if (a.status !== 'Cancelled') {
                    // Only show action buttons for pending appointments
                    actionsHtml = '<div class="btn-group btn-group-sm" role="group">'
                        + '<button type="button" class="btn btn-outline-success btn-complete" title="Complete & Bill"><i class="bi bi-check2"></i></button>'
                        + '<button type="button" class="btn btn-outline-danger btn-cancel" title="Cancel"><i class="bi bi-x"></i></button>'
                        + '</div>';
                } else {
                    actionsHtml = '<span class="text-muted small">Cancelled</span>';
                }
                
                return '<tr data-appointment-id="'+a.appointmentId+'" data-status="'+a.status+'" data-patient-name="'+(a.patientName||'')+'" data-patient-id="'+a.patientId+'">'
                    + '<td>'+a.appointmentDate.substring(0,10)+'</td>'
                    + '<td>'+(a.timeSlot||'')+'</td>'
                    + '<td>'+(a.patientName||'')+'</td>'
                    + '<td><span class="badge text-bg-'+statusClass+'">'+a.status+'</span></td>'
                    + '<td class="small">'+(a.symptoms||'N/A')+'</td>'
                    + '<td class="text-center">' + actionsHtml + '</td></tr>';
            }).join('');
            $tbody.html(html);
        }

        function loadAppointments(filter){
            $.getJSON('/Doctor/AppointmentsData', { filter: filter }, function(data){
                var norm = $.map(data, function(r){
                    return { appointmentId:r.appointmentId??r.AppointmentId, appointmentDate:r.appointmentDate??r.AppointmentDate, timeSlot:r.timeSlot??r.TimeSlot, patientName:r.patientName??r.PatientName, status:r.status??r.Status, symptoms:r.symptoms??r.Symptoms, patientId:r.patientId??r.PatientId };
                });
                renderAppointments(norm);
            });
        }

        $('#apptFilters').on('click','.filter-btn', function(){
            $('.filter-btn').removeClass('active');
            $(this).addClass('active');
            loadAppointments($(this).data('filter'));
        });

        // Stat card clicks
        $('.stat-trigger').on('click', function(){
            var filter = $(this).data('filter');
            loadAppointments(filter === 'pending' ? 'pending' : 'all');
            $('.stat-card').removeClass('active-stat');
            $(this).find('.stat-card').addClass('active-stat');
        });

        $('#appointmentsTable').on('click', '.btn-complete', function(){
            openBillModal($(this).closest('tr'));
        });

        $('#appointmentsTable').on('click', '.btn-cancel', function(){
            var $row = $(this).closest('tr');
            var $button = $(this);
            var appointmentId = parseInt($row.data('appointment-id'));
            var patientName = $row.data('patient-name');
            
            if (confirm('Are you sure you want to cancel the appointment for ' + patientName + '?')) {
                // Disable button and show loading state
                $button.prop('disabled', true).html('<i class="bi bi-hourglass-split"></i>');
                
                $.ajax({
                    url: '/Doctor/CancelAppointment',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ AppointmentId: appointmentId }),
                    success: function(response) {
                        if (response.success) {
                            // Add visual feedback for cancelled row
                            $row.addClass('row-whoosh-out');
                            
                            setTimeout(function() {
                                // Refresh the appointments table
                                var currentFilter = $('.filter-btn.active').data('filter') || 'upcoming';
                                loadAppointments(currentFilter);
                                
                                // Show success message
                                alert('Appointment cancelled successfully.');
                            }, 500);
                        } else {
                            // Re-enable button on error
                            $button.prop('disabled', false).html('<i class="bi bi-x"></i>');
                            alert('Error: ' + (response.message || 'Failed to cancel appointment'));
                        }
                    },
                    error: function(xhr) {
                        // Re-enable button on error
                        $button.prop('disabled', false).html('<i class="bi bi-x"></i>');
                        alert('Error cancelling appointment: ' + (xhr.responseText || 'Unknown error'));
                    }
                });
            }
        });

        $('#generateAndPayBtn').on('click', function(){
            var apptId = parseInt($('#billAppointmentId').val()||'0');
            if(!apptId) return;
            var prescription = $.trim($('#billPrescription').val());
            var totalAmount = parseFloat($('#billTotalAmount').val()||'0');

            $('#billError').addClass('d-none');

            if (prescription === '') {
                $('#billError').text('Prescription details are required.').removeClass('d-none');
                return;
            }
            if (isNaN(totalAmount) || totalAmount <= 0) {
                $('#billError').text('Enter a valid amount before generating.').removeClass('d-none');
                return;
            }

            $.ajax({
                url:'/Doctor/CompleteAppointmentAndCreateBill',
                method:'POST',
                contentType:'application/json',
                data: JSON.stringify({ appointmentId: apptId, prescription: prescription, totalAmount: totalAmount }),
                success:function(resp){
                    if(resp && resp.success){
                       window.location.href = '/Doctor/PayBill?billId=' + resp.billId;
                    } else {
                       $('#billError').text('Failed to generate bill').removeClass('d-none');
                    }
                },
                error:function(xhr){ 
                    $('#billError').text('Generate failed: '+ (xhr.responseText||'')).removeClass('d-none'); 
                }
            });
        });

        // Handle availability dropdown change
        $('#availabilityDropdown').on('change', function(){
            var isAvailable = $(this).val() === 'true';
            
            $.ajax({
                url: '/Doctor/SetAvailability',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ IsAvailable: isAvailable }),
                success: function(resp) {
                    if (resp && resp.success) {
                        var badge = $('#availabilityBadge');
                        if (resp.isAvailable) {
                            badge.html('<span class="bg-success"><i class="bi bi-check-circle me-1"></i>Available</span>');
                        } else {
                            badge.html('<span class="bg-danger"><i class="bi bi-x-circle me-1"></i>Unavailable</span>');
                        }
                        console.log('Availability status updated successfully');
                    }
                },
                error: function(xhr) {
                    console.error('Failed to update availability status');
                    $('#availabilityDropdown').val(!isAvailable ? 'true' : 'false');
                }
            });
        });
    });
</script>