@* Views/Account/DoctorLogin.cshtml *@
@{
    ViewData["Title"] = "Doctor Login";
    Layout = "_Layout";
}

<div id="particles-container" aria-hidden="true"></div>

<div class="floating-shapes" aria-hidden="true">
    <div class="shape shape-1"></div>
    <div class="shape shape-2"></div>
    <div class="shape shape-3"></div>
    <div class="shape shape-4"></div>
    <div class="shape shape-5"></div>
</div>

<section class="hero-section text-white" style="min-height: 100vh; position: relative;">
    <div class="hero-background-animation"></div>
    <div class="glass-overlay"></div>

    <div class="login-container">
        <div class="glass-card p-4 p-md-5 text-center">
            <div class="mb-4">
                <div class="portal-icon doctor-gradient mx-auto mb-3" style="width: 80px; height: 80px;">
                    <div class="doctor-logo-container">
                        <img src="~/images/doctor-logo.png" alt="Doctor Logo" class="doctor-logo" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                        <div class="doctor-logo-fallback">
                            <i class="bi bi-person-fill-gear"></i>
                        </div>
                    </div>
                    <div class="icon-ripple"></div>
                </div>
                <h2 class="gradient-text mb-2" style="font-size: 2.5rem;">Doctor Portal</h2>
                <p class="text-light opacity-75">Access your clinical dashboard</p>
            </div>

            @if (ViewBag.Error != null)
            {
                <div class="alert alert-danger glass-card mb-4" style="background: rgba(231, 76, 60, 0.15); border: 1px solid rgba(231, 76, 60, 0.3); color: #fff;">
                    <i class="bi bi-exclamation-triangle me-2"></i>@ViewBag.Error
                </div>
            }

            <form asp-action="LoginDoctor" asp-controller="Account" method="post" class="text-start">
                <input type="hidden" name="userType" value="doctor" />

                <div class="mb-3">
                    <label for="username" class="form-label text-light">Username</label>
                    <input type="text" class="form-control glass-input" id="username" name="username" required style="background: rgba(255, 255, 255, 0.9); border: 1px solid rgba(255, 255, 255, 0.3);">
                </div>

                <div class="mb-4">
                    <label for="password" class="form-label text-light">Password</label>
                    <input type="password" class="form-control glass-input" id="password" name="password" required style="background: rgba(255, 255, 255, 0.9); border: 1px solid rgba(255, 255, 255, 0.3);">
                </div>

                <div class="d-grid gap-3">
                    <button type="submit" class="btn btn-portal-doctor btn-lg hover-lift">
                        <i class="bi bi-box-arrow-in-right me-2"></i>
                        Sign In
                    </button>
                </div>
            </form>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Particle system using jQuery
        function createParticles() {
            const $container = $('#particles-container');
            if (!$container.length) return;
            const particleCount = 50;

            for (let i = 0; i < particleCount; i++) {
                $('<div>').addClass('particle').css({
                    left: Math.random() * 100 + '%',
                    top: Math.random() * 100 + '%',
                    animationDelay: Math.random() * 20 + 's',
                    animationDuration: (Math.random() * 10 + 10) + 's'
                }).appendTo($container);
            }
        }

        $(function () {
            // Initialize particles
            createParticles();

            // Enhanced input focus effects
            $('.glass-input').on('focus', function() {
                $(this).addClass('input-focused').css({
                    'background': 'rgba(255, 255, 255, 0.95)',
                    'border-color': 'var(--primary-color)',
                    'box-shadow': '0 0 0 3px rgba(44, 110, 186, 0.1)',
                    'transform': 'translateY(-2px)'
                });
            }).on('blur', function() {
                $(this).removeClass('input-focused').css({
                    'background': 'rgba(255, 255, 255, 0.9)',
                    'border-color': 'rgba(255, 255, 255, 0.3)',
                    'box-shadow': 'none',
                    'transform': 'translateY(0)'
                });
            });

            // Add reveal animation to form
            $('.glass-card').addClass('text-reveal reveal-in');
        });
    </script>
}

<style>
    .login-container {
        /* This is the magic for centering */
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        /* This ensures the card has a responsive width */
        width: 90%;
        max-width: 520px;
    }

    .text-accent {
        color: var(--accent-color) !important;
    }

    .input-focused {
        transform: scale(1.02);
    }
</style>