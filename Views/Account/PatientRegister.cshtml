@model HMSApp.Models.Patient
@{
    ViewData["Title"] = "Patient Registration";
    Layout = "_Layout";
}
@if (ViewBag.RegistrationSuccess != null && ViewBag.RegistrationSuccess)
{
    <div id="success-toast" class="toast-notification">
        <i class="bi bi-check-circle-fill me-3"></i>
        <span><strong>Registration Successful!</strong> Redirecting you to login...</span>
    </div>
}

<!-- Animated Background Elements from Landing Page -->
<div id="particles-container" aria-hidden="true"></div>

<div class="floating-shapes" aria-hidden="true">
    <div class="shape shape-1"></div>
    <div class="shape shape-2"></div>
    <div class="shape shape-3"></div>
    <div class="shape shape-4"></div>
    <div class="shape shape-5"></div>
</div>

<section class="hero-section text-white d-flex align-items-center" style="min-height: 100vh; padding-top: 2rem; padding-bottom: 2rem;">
    <div class="hero-background-animation"></div>
    <div class="glass-overlay"></div>

    <div class="container position-relative">
        <div class="row justify-content-center">
            <div class="col-lg-7 col-md-9 col-sm-11">
                <!-- Registration Card with Glass Effect -->
                <div class="glass-card p-4 p-md-5 text-center">
                    <!-- Header -->
                    <div class="mb-4">
                        <div class="portal-icon patient-gradient mx-auto mb-3" style="width: 80px; height: 80px;">
                            <i class="bi bi-person-plus"></i>
                            <div class="icon-ripple"></div>
                        </div>
                        <h2 class="gradient-text mb-2" style="font-size: 2.5rem;">Join Our Platform</h2>
                        <p class="text-light opacity-75">Create your patient account and start your healthcare journey</p>
                    </div>

                    <!-- Registration Form -->
                    <form asp-action="PatientRegister" method="post" class="text-start">
                        <div class="row g-3">
                            <!-- Personal Information Section -->
                            <div class="col-12">
                                <h5 class="text-light mb-3 pb-2" style="border-bottom: 1px solid rgba(255,255,255,0.2);">
                                    <i class="bi bi-person-fill me-2"></i>Personal Information
                                </h5>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="Name" class="form-label text-light">Full Name</label>
                                <input asp-for="Name" class="form-control glass-input" required style="background: rgba(255, 255, 255, 0.9); border: 1px solid rgba(255, 255, 255, 0.3);" />
                                <span asp-validation-for="Name" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="DateOfBirth" class="form-label text-light">Date of Birth</label>
                                <input asp-for="DateOfBirth" class="form-control glass-input" type="date" max="@DateTime.Now.ToString("yyyy-MM-dd")" required style="background: rgba(255, 255, 255, 0.9); border: 1px solid rgba(255, 255, 255, 0.3);" />
                                <span asp-validation-for="DateOfBirth" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="Gender" class="form-label text-light">Gender</label>
                                <select asp-for="Gender" class="form-control glass-input" required style="background: rgba(255, 255, 255, 0.9); border: 1px solid rgba(255, 255, 255, 0.3);">
                                    <option value="">Select Gender</option>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                    <option value="Other">Other</option>
                                </select>
                                <span asp-validation-for="Gender" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="ContactNumber" class="form-label text-light">Contact Number</label>
                                <input asp-for="ContactNumber" class="form-control glass-input" type="tel" minlength="10" maxlength="10" placeholder="Enter 10-digit phone number" required style="background: rgba(255, 255, 255, 0.9); border: 1px solid rgba(255, 255, 255, 0.3);" />
                                <span asp-validation-for="ContactNumber" class="text-danger small"></span>
                            </div>

                            <div class="col-12">
                                <label asp-for="Address" class="form-label text-light">Address</label>
                                <textarea asp-for="Address" class="form-control glass-input" rows="3" placeholder="Enter your complete address" required style="background: rgba(255, 255, 255, 0.9); border: 1px solid rgba(255, 255, 255, 0.3); resize: vertical;"></textarea>
                                <span asp-validation-for="Address" class="text-danger small"></span>
                            </div>

                            <!-- Account Information Section -->
                            <div class="col-12 mt-4">
                                <h5 class="text-light mb-3 pb-2" style="border-bottom: 1px solid rgba(255,255,255,0.2);">
                                    <i class="bi bi-shield-lock me-2"></i>Account Security
                                </h5>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="Username" class="form-label text-light">Username</label>
                                <input asp-for="Username" class="form-control glass-input" placeholder="Choose a unique username" required style="background: rgba(255, 255, 255, 0.9); border: 1px solid rgba(255, 255, 255, 0.3);" />
                                <span asp-validation-for="Username" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="Password" class="form-label text-light">Password</label>
                                <div class="position-relative">
                                    <input asp-for="Password" type="password" class="form-control glass-input" placeholder="Create a strong password" required style="background: rgba(255, 255, 255, 0.9); border: 1px solid rgba(255, 255, 255, 0.3);" />
                                    <button type="button" class="btn btn-sm position-absolute" style="right: 10px; top: 50%; transform: translateY(-50%); border: none; background: none; color: #666;" onclick="togglePasswordVisibility('Password')">
                                        <i class="bi bi-eye" id="Password-icon"></i>
                                    </button>
                                </div>
                                <div class="password-strength mt-2" id="Password-strength" style="display: none;">
                                    <div class="strength-bar">
                                        <div class="strength-fill" id="Password-strength-fill"></div>
                                    </div>
                                    <small class="strength-text" id="Password-strength-text"></small>
                                </div>
                                <div class="password-requirements mt-2" id="Password-requirements" style="display: none;">
                                    <small class="text-light">
                                        <div class="requirement" id="req-length">• 8-16 characters</div>
                                        <div class="requirement" id="req-uppercase">• At least one uppercase letter</div>
                                        <div class="requirement" id="req-lowercase">• At least one lowercase letter</div>
                                        <div class="requirement" id="req-number">• At least one number</div>
                                        <div class="requirement" id="req-special">• At least one special character</div>
                                    </small>
                                </div>
                                <span asp-validation-for="Password" class="text-danger small"></span>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-grid gap-3 mt-4">
                            <button type="submit" class="btn btn-portal-patient btn-lg hover-lift">
                                <i class="bi bi-person-plus-fill me-2"></i>
                                Create Account
                            </button>

                            <div class="text-center">
                                <span class="text-light opacity-75">Already have an account?</span>
                                <a asp-action="PatientLogin" class="btn btn-glass btn-sm ms-2 hover-lift">
                                    <i class="bi bi-box-arrow-in-right me-1"></i>Sign In
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Particle system using jQuery
        function createParticles() {
            const $container = $('#particles-container');
            if (!$container.length) return;
            const particleCount = 50;

            for (let i = 0; i < particleCount; i++) {
                $('<div>').addClass('particle').css({
                    left: Math.random() * 100 + '%',
                    top: Math.random() * 100 + '%',
                    animationDelay: Math.random() * 20 + 's',
                    animationDuration: (Math.random() * 10 + 10) + 's'
                }).appendTo($container);
            }
        }

        function togglePasswordVisibility(inputId) {
            const $input = $(`#${inputId}`);
            const $icon = $(`#${inputId}-icon`);

            if ($input.attr('type') === 'password') {
                $input.attr('type', 'text');
                $icon.removeClass('bi-eye').addClass('bi-eye-slash');
            } else {
                $input.attr('type', 'password');
                $icon.removeClass('bi-eye-slash').addClass('bi-eye');
            }
        }

        $(function () {
            // Initialize particles
            createParticles();

            // Enhanced input focus effects
            $('.glass-input').on('focus', function() {
                $(this).addClass('input-focused').css({
                    'background': 'rgba(255, 255, 255, 0.95)',
                    'border-color': 'var(--primary-color)',
                    'box-shadow': '0 0 0 3px rgba(44, 110, 186, 0.1)',
                    'transform': 'translateY(-2px)'
                });
            }).on('blur', function() {
                $(this).removeClass('input-focused').css({
                    'background': 'rgba(255, 255, 255, 0.9)',
                    'border-color': 'rgba(255, 255, 255, 0.3)',
                    'box-shadow': 'none',
                    'transform': 'translateY(0)'
                });
            });

            // Add reveal animation to form
            $('.glass-card').addClass('text-reveal reveal-in');
            const $successToast = $('#success-toast');
            if ($successToast.length) {
                // Show the toast with an animation
                setTimeout(function() {
                    $successToast.addClass('show');
                }, 100);

                // Redirect after a short delay to the login page
                setTimeout(function () {
                    window.location.href = '@Url.Action("PatientLogin", "Account")';
                }, 1000); // Redirect after 3 seconds
            }

            // Form validation enhancements
            $('form').on('submit', function(e) {
                const $submitBtn = $(this).find('button[type="submit"]');
                $submitBtn.prop('disabled', true).html('<i class="bi bi-hourglass-split me-2"></i>Creating Account...');

                // Re-enable button after 3 seconds in case of validation errors
                setTimeout(function() {
                    $submitBtn.prop('disabled', false).html('<i class="bi bi-person-plus-fill me-2"></i>Create Account');
                }, 3000);
            });

            // Real-time username validation feedback
            $('#Username').on('input', function() {
                const username = $(this).val();
                if (username.length >= 3) {
                    $(this).css('border-color', 'var(--success)');
                } else if (username.length > 0) {
                    $(this).css('border-color', 'var(--warning)');
                }
            });

            // Password strength indicator
            $('#Password').on('input', function() {
                const password = $(this).val();
                let strength = 0;
                $('#Password-strength').show();
                $('#Password-requirements').show();

                // Check password length
                if (password.length >= 8) {
                    strength++;
                    $('#req-length').css('color', 'green');
                } else {
                    $('#req-length').css('color', 'red');
                }

                // Check for uppercase letter
                if (/(?=.*[A-Z])/.test(password)) {
                    strength++;
                    $('#req-uppercase').css('color', 'green');
                } else {
                    $('#req-uppercase').css('color', 'red');
                }

                // Check for lowercase letter
                if (/(?=.*[a-z])/.test(password)) {
                    strength++;
                    $('#req-lowercase').css('color', 'green');
                } else {
                    $('#req-lowercase').css('color', 'red');
                }

                // Check for numeric character
                if (/(?=.*\d)/.test(password)) {
                    strength++;
                    $('#req-number').css('color', 'green');
                } else {
                    $('#req-number').css('color', 'red');
                }

                // Check for special character
                if (/(?=.*[!@@#$%^&*])/.test(password)) {
                    strength++;
                    $('#req-special').css('color', 'green');
                } else {
                    $('#req-special').css('color', 'red');
                }

                // Update strength bar and text
                const $strengthFill = $('#Password-strength-fill');
                const $strengthText = $('#Password-strength-text');
                $strengthFill.removeClass('weak medium strong').addClass('')
                if (strength === 5) {
                    $strengthFill.addClass('strong').css('width', '100%');
                    $strengthText.text('Strong').css('color', 'green');
                } else if (strength >= 3) {
                    $strengthFill.addClass('medium').css('width', '60%');
                    $strengthText.text('Medium').css('color', 'orange');
                } else {
                    $strengthFill.addClass('weak').css('width', '30%');
                    $strengthText.text('Weak').css('color', 'red');
                }
            });

            // Phone number formatting
            $('#ContactNumber').on('input', function() {
                let value = $(this).val().replace(/\D/g, '');
                if (value.length === 10) {
                    $(this).css('border-color', 'var(--success)');
                } else if (value.length > 0) {
                    $(this).css('border-color', 'var(--warning)');
                }
            });
        });
    </script>
}

<style>
    .text-accent {
        color: var(--accent-color) !important;
    }

    .input-focused {
        transform: scale(1.02);
    }

    /* Enhanced form validation styles */
    .form-control:valid {
        border-color: var(--success) !important;
    }

    .form-control:invalid:not(:placeholder-shown) {
        border-color: var(--danger) !important;
    }

    /* Section headers */
    .text-light h5 {
        color: rgba(255, 255, 255, 0.9) !important;
        font-weight: 600;
    }

    /* Password strength indicator styles */
    .password-strength {
        height: 8px;
        background-color: rgba(255, 255, 255, 0.3);
        border-radius: 4px;
        overflow: hidden;
    }

    .strength-fill {
        height: 100%;
        transition: width 0.3s ease;
    }

    .strength-text {
        margin-top: 4px;
        font-size: 0.875rem;
        font-weight: 500;
    }

    /* Password requirements list */
    .password-requirements {
        font-size: 0.875rem;
        margin-top: 8px;
    }

    .requirement {
        margin-bottom: 4px;
    }

    .toast-notification {
        position: fixed;
        top: 25px;
        left: 50%;
        transform: translate(-50%, -150%);
        background-color: #27ae60;
        color: white;
        padding: 14px 24px;
        border-radius: 50px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.25);
        display: flex;
        align-items: center;
        font-size: 1.1rem;
        z-index: 2000;
        transition: transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

        .toast-notification i {
            font-size: 1.5rem;
        }

        .toast-notification.show {
            transform: translate(-50%, 0);
        }
</style>
